@using TandemBooking.Services
@model TandemBooking.ViewModels.BookingAdmin.BookingDetailsViewModel
@{
    ViewData["Title"] = "Booking Details";
}

<h2>@ViewData["Title"]</h2>

@if (Model.ErrorMessage != null)
{
    <div class="alert alert-danger">@Model.ErrorMessage</div>
}

<style>
    option.unavailable {
        background-color: lightsalmon;
    }
    option.available {
        background-color: lightgreen;
    }
</style>

<div class="row">
    <div class="col-sm-12">
        <section>
            <h3>Booking Info</h3>
            <form asp-controller="Admin" asp-action="Edit" method="post" class="form-horizontal" role="form">
                <input type="hidden" asp-for="Booking.Id"/>
                <div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Booking.BookingDate" class="col-sm-4 control-label">Booked Date</label>
                    <div class="col-sm-8 control-text">
                        @Model.Booking.BookingDate.ToString("dd.MM.yyyy")
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.BookingDate" class="col-sm-4 control-label">Registration Date</label>
                    <div class="col-sm-8 control-text">
                        @Model.Booking.DateRegistered.ToString("dd.MM.yyyy HH:mm")
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.BookingDate" class="col-sm-4 control-label">Canceled</label>
                    <div class="col-sm-8 control-text">
                        @(Model.Booking.Canceled ? "Yes" : "No")
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.PassengerName" class="col-sm-4 control-label">Passenger</label>
                    <div class="col-sm-8 control-text">
                        @Model.Booking.PassengerName
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.PassengerPhone" class="col-sm-4 control-label">Passenger Email</label>
                    <div class="col-sm-8 control-text">
                        @Model.Booking.PassengerPhone
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.PassengerEmail" class="col-sm-4 control-label">Passenger Email</label>
                    <div class="col-sm-8 control-text">
                        @Model.Booking.PassengerEmail
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.Comment" class="col-sm-4 control-label">Passenger Comment</label>
                    <div class="col-sm-8 control-text">
                        @Model.Booking.Comment
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Booking.AssignedPilot" class="col-sm-4 control-label">Assigned Pilot</label>
                    <div class="col-sm-8 control-text">
                        @if (Model.Booking.AssignedPilot != null)
                        {
                            <text>@Model.Booking.AssignedPilot?.Name (@Model.Booking.AssignedPilot.PhoneNumber)</text>
                        }
                        else
                        {
                            <text>No pilot assigned</text>
                        }
                    </div>
                </div>
            </form>
        </section>


        <section>
            <h3>Booking History</h3>
            <div class="">
                <table class="table">
                    <tr>
                        <th>Date</th>
                        <th>Message</th>
                        <th>User</th>
                    </tr>
                    @foreach (var evt in Model.Booking.BookingEvents.OrderBy(e => e.EventDate))
                    {
                        <tr>
                            <td>@evt.EventDate.ToString("dd.MM.yyyy HH:mm")</td>
                            <td>
                                @evt.EventMessage
                            </td>
                            <td>
                                @if (evt.User != null)
                                {
                                    <text>@evt.User.Name (@evt.User.PhoneNumber):</text>
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </section>

        @if (Model.Editable)
        {
            <section>
                <h3>Add message</h3>

                <div class="col-sm-12">
                    <p>Add message to the booking and optionally send the message to the passenger</p>

                    <form asp-controller="BookingAdmin" asp-action="AddMessage" class="form">
                        <input type="hidden" name="Id" value="@Model.Booking.Id"/>
                        <div class="">
                            <div>
                                <textarea class="form-control" id="EventMessage" name="EventMessage" placeholder="Type message to add to booking"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="checkbox checkbox-inline">
                                <input type="checkbox" name="SendToPassenger" id="SendToPassenger" value="true"/>
                                <label class="control-label" for="SendToPassenger">
                                    Send message to passenger via SMS
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Add Message</button>
                        </div>
                    </form>
                </div>
            </section>

            <section>
                <h3>Assign new pilot</h3>

                <div class="col-sm-12">
                    <p>If the currently assign pilot is unable to make the flight, use this to find a new pilot from the available pilots to take the flight. A message is sent to the passenger notifying him of the new pilot. If no other pilots are available, the tandem coordinator is notified and tasked with finding a new pilot.</p>
                    <form asp-controller="BookingAdmin" asp-action="NewPilot" method="post" role="form" onsubmit="return submitNewPilot()">
                        <input type="hidden" name="Id" value="@Model.Booking.Id"/>
                        <div class="form-group">
                            <textarea class="form-control" id="NewPilotMessage" name="NewPilotMessage" placeholder="Please enter a reason to assign a new pilot"></textarea>
                        </div>
                        @if (User.IsAdmin())
                        {
                            <p>
                                Select "Choose from available pilots" to make a fair selection of pilot based on priority. If no pilots are available, you can use this dropdown to select a pilot not marked as available (Remember to verify that the pilot can actually make the flight first).
                            </p>
                            <div class="form-group">
                                <select class="form-control" id="NewPilotUserId" name="NewPilotUserId" placeholder="Please enter a reason to assign a new pilot">
                                    <option value="">Choose from available pilots</option>
                                    @foreach (var pilot in Model.AvailablePilots.OrderByDescending(p => p.Available).ThenBy(p => p.Priority))
                                    {
                                        <option class="@(pilot.Available ? "available" : "unavailable")" value="@pilot.Pilot.Id">
                                            @pilot.Pilot.Name (@pilot.Pilot.PhoneNumber)
                                            @(pilot.Available ? "Available" : "Unavailable")
                                            Priority @(pilot.Priority)
                                        </option>
                                    }
                                </select>
                            </div>
                        }
                        <div class="form-group">
                            <button type="submit" class="btn btn-info">Assign new pilot</button>
                        </div>
                    </form>
                </div>

            </section>


            <section>
                <h3>Cancel Booking</h3>

                <div class="col-sm-12">
                    <p>Cancel the booking and send a message to the passenger. Use this if the booking cannot completed be due to weather, passenger not showing up or similar. Do not use this if the booking is moved to another date.</p>
                    <p>The passenger will receive a message on the form: "Unfortunately your flight on @Model.Booking.BookingDate.ToString("dd.MM.yyyy") has been canceled due to {cancel-message}"</p>
                    <form asp-controller="BookingAdmin" asp-action="Cancel" method="post" role="form" onsubmit="return submitCancel()">
                        <input type="hidden" name="Id" value="@Model.Booking.Id"/>
                        <div class="form-group">
                            <textarea class="form-control" id="CancelMessage" name="CancelMessage" placeholder="Please enter reason to cancel flight"></textarea>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-danger">Cancel Booking</button>
                        </div>
                    </form>
                </div>
            </section>
        }
    </div>
</div>

@section scripts
{
    <script>
        function submitCancel() {
            if ($("#CancelMessage").val() == "") {
                alert("Please enter a message explaining why the flight was canceled");
                return false;
            }

            return confirm("Cancel the flight and notify the passenger?");
        }
        
        function submitNewPilot() {
            return confirm("Unassign the current pilot and find a new one?")

        }
    </script>
}
